@page "/"

@inject HttpClient HttpClient
@using marveltake2.Models

<PageTitle>Index</PageTitle>

<h1 class="text-center text-primary">Blazor Marvel magic Lookup Engine</h1>

<div class="text-center">
    <div class="p-2">
        <input class="form-control form-control-lg w-50 mx-auto mt-4" placeholder="Enter Marvel Character" @bind-value="whotofind"/>
    </div>
    <div class="p-2">
        <button class="btn btn-primary btn-lg" @onclick="FindMarvel" >Find your Marvel hero</button>
    </div>
</div>

@if (_marvelResult != null)


{
    <div class="container">
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3">

            @foreach(var result in _marvelResult.Data.Results)
            {
            <div class="col mb-4">
                <div class="card">
                    <img src="@($"{result.Thumbnail.Path}.{result.Thumbnail.Extension}")" 
                     class="card-img-top">
                    <div class="card-body">
                        <h5 class="card-title">@result.Name</h5>
                        <p class="card-text">
                            @result.Description
                        </p>
                    </div>
                </div>
            </div>
            }
        </div>
    </div>
}



@code
{
    private MarvelResult _marvelResult;

    private string whotofind;

    private string MarvelapiKey = "<enter your Marvel API key here>";

    private async Task FindMarvel()

    {
        var url = $"characters?nameStartsWith={whotofind}&apikey={MarvelapiKey}";

        _marvelResult = await HttpClient
            .GetFromJsonAsync<MarvelResult>(url,new System.Text.Json.JsonSerializerOptions
            {
                PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase
            });
 

    }
}